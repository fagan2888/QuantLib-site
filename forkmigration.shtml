<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<!--#include virtual="qlmeta.inc"-->
<meta name="author" content="Luigi Ballabio">
<meta name="copyright" content=
"StatPro Italia srl (C) 2013">
<meta name="description" content="QuantLib Git">
<link rel="stylesheet" href="./styles/nosplash.css" type="text/css">
<title>Migrating an obsolete QuantLib fork</title>
</head>
<body>
<div id="container">
<!--#include virtual="header.inc"-->
<div id="menu">
<!--#include virtual="usermenu.inc"-->
</div>
<div id="content">

<h1 class="center">Migrating an obsolete QuantLib fork</h1>

<p>As of December 2015, the old GitHub repository was split into
several modules.  If you forked the old repository on GitHub but had
not made any changes, the migration is simple: just delete your old
fork and create a new one. If your fork contained changes that you
want to keep, these instructions will guide you through migrating them
to a fork of the new repositories. They should work on any system for
which a command-line interface to git is available.</p>

<p>First, make a copy of the repository to convert.  Clone it from
your fork, in order to get your own changes, too.
<pre>
[~] $ mkdir temp
[~] $ cd temp
[~/temp] $ git clone git@github.com:USERNAME/quantlib.git
[~/temp] $ cd quantlib
[~/temp/quantlib] $
</pre>
(In the URL above, replace USERNAME with your GitHub username.)</p>

<p>After cloning, the only local branch in your new repository is master.
Check which branches you have on the repository from which you forked...
<pre>
[~/temp/quantlib] $ git branch -r
origin/HEAD -> origin/master
origin/bar
origin/foo
origin/master
origin/quux
origin/v1.7.x
</pre>
...and recreate locally the ones with changes that you want to migrate.
<pre>
[~/temp/quantlib] $ git branch foo origin/foo
</pre>
(Repeat the above for each branch.)</p>

<p>At this point, the command below will perform the exact same
conversion we used for splitting the modules, so that the common parts
of the history will still have the same identifiers.
<pre>
[~/temp/quantlib] $ git filter-branch --prune-empty --subdirectory-filter QuantLib -- --all
</pre>
(The above works for the core C++ library; if you want to migrate changes
to another module, replace QuantLib with the corresponding folder.)</p>

<p>When the conversion finishes, you'll have a new repository with just the
contents of the chosen module and its history rewritten to match the
original one but discard the commits that didn't touch your module.</p>

<p>Now log into your GitHub account, rename your fork of the old
repository and create a fork of the new one.  After you've done this,
go back to your local repository, unlink it to your old fork, and link
it to your new one:
<pre>
[~/temp/quantlib] $ git remote remove origin
[~/temp/quantlib] $ git remote add origin git@github.com:USERNAME/QuantLib.git
[~/temp/quantlib] $ git fetch origin
</pre>
</p>

<p>Now, for every branch that you want to migrate (possibly including the
master branch), you can publish your changes.</p>

<p>If the branch is also in the official module (and therefore in your
new fork), first pull any upstream changes. This will try to perform a
merge with your changes; if the merge needs your intervention, resolve
it and commit the resolution.
<pre>
[~/temp/quantlib] $ git checkout master
[~/temp/quantlib] $ git pull origin master
</pre>
After you're done, you can push the branch to the fork:
<pre>
[~/temp/quantlib] $ git push origin master
</pre>
</p>

<p>If the branch is not in the official module, just push it to your fork
instead:
<pre>
[~/temp/quantlib] $ git checkout foo
[~/temp/quantlib] $ git push origin foo
</pre>
After you've pushed each branch, you're done for this module. To
reclaim space used by the conversion, and to set up branch tracking
more easily, you can delete the converted local repository and
recreate it by cloning from your new GitHub fork.</p>

<p>The bad news: now you'll have to do the above all over again for each
module in which you have changes to migrate.</p>
</div>

<div id="menuafter">
<!--#include virtual="usermenu.inc"-->
</div>

<div class="footer">
<!--#include virtual="footer.inc"-->
</div>

</div>

</body>
</html>
